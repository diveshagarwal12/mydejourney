{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dfmydejourney"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase'"
		},
		"linkedService1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService1'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/combine_part_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "outCSV",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "outCSV",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "FinalOutput",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-24T15:42:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/outCSV')]",
				"[concat(variables('factoryId'), '/datasets/FinalOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_ingestcsv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ingestcsv",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ingestcsv",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-24T15:42:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ingestcsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_ingestcsv_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ingestcsv",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Data flow1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "combine_part_file",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-24T15:42:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ingestcsv')]",
				"[concat(variables('factoryId'), '/pipelines/combine_part_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_ingestcsv_db')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ingestcsv_db",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ingestcsv_db",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"loadIntoDB": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-24T15:42:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ingestcsv_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_ingestjson_db')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_create_partfiles",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ingestcsv",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "load_json_pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "df_create_partfiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "load_json_table",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-25T20:00:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ingestcsv')]",
				"[concat(variables('factoryId'), '/pipelines/load_json_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/delete_out_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "outCSV",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService1",
									"type": "LinkedServiceReference"
								},
								"path": "logs"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-24T15:15:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/outCSV')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_json_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "outCSV",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "singlequote",
								"value": "@variables('singlequote')"
							}
						],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[load_json_sp]",
							"storedProcedureParameters": {
								"myjson": {
									"value": {
										"value": "@concat(variables('singlequote'),activity('Get Metadata1').output.childItems, variables('singlequote'))",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"singlequote": {
						"type": "String",
						"defaultValue": "'"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-25T20:00:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/outCSV')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FinalOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sorted_movie_ds.csv",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "index",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "original_language",
						"type": "String"
					},
					{
						"name": "release_date",
						"type": "String"
					},
					{
						"name": "popularity",
						"type": "String"
					},
					{
						"name": "vote_average",
						"type": "String"
					},
					{
						"name": "vote_count",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/binFileInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Dataset_TMDB.zip",
						"container": "source"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Fastest"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/binFileOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inpMovieDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Movies_dataset.csv",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "index",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "original_language",
						"type": "String"
					},
					{
						"name": "release_date",
						"type": "String"
					},
					{
						"name": "popularity",
						"type": "String"
					},
					{
						"name": "vote_average",
						"type": "String"
					},
					{
						"name": "vote_count",
						"type": "String"
					},
					{
						"name": "overview",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": null
				},
				"schema": [
					{
						"name": "index",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "original_language",
						"type": "String"
					},
					{
						"name": "release_date",
						"type": "String"
					},
					{
						"name": "popularity",
						"type": "String"
					},
					{
						"name": "vote_average",
						"type": "String"
					},
					{
						"name": "vote_count",
						"type": "String"
					},
					{
						"name": "overview",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_olympic_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dataset_olympics.csv",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Sex",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "Height",
						"type": "String"
					},
					{
						"name": "Weight",
						"type": "String"
					},
					{
						"name": "Team",
						"type": "String"
					},
					{
						"name": "NOC",
						"type": "String"
					},
					{
						"name": "Games",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Season",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Sport",
						"type": "String"
					},
					{
						"name": "Event",
						"type": "String"
					},
					{
						"name": "Medal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linkedService1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestcsv')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "inpMovieDS",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outCSV",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "linkedService1",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "sort1"
						},
						{
							"name": "filternullvotes"
						}
					],
					"scriptLines": [
						"source(output(",
						"          index as string,",
						"          title as string,",
						"          original_language as string,",
						"          release_date as string,",
						"          popularity as string,",
						"          vote_average as double,",
						"          vote_count as integer,",
						"          overview as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['Movies_dataset.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          index,",
						"          title,",
						"          original_language,",
						"          release_date,",
						"          popularity,",
						"          vote_average,",
						"          vote_count",
						"     ),",
						"     partitionBy('hash', 1),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sort(desc(vote_count, true),",
						"     partitionBy('hash', 1)) ~> sort1",
						"sort1 filter(not(isNull(vote_count)),",
						"     partitionBy('hash', 1)) ~> filternullvotes",
						"filternullvotes sink(allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     input(",
						"          index as string,",
						"          title as string,",
						"          original_language as string,",
						"          release_date as string,",
						"          popularity as string,",
						"          vote_average as string,",
						"          vote_count as string,",
						"          overview as string",
						"     ),",
						"     partitionFileNames:['sorted_movie_ds.csv'],",
						"     truncate: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          index,",
						"          title,",
						"          original_language,",
						"          release_date,",
						"          popularity,",
						"          vote_average,",
						"          vote_count",
						"     ),",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/inpMovieDS')]",
				"[concat(variables('factoryId'), '/datasets/outCSV')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestcsv_db')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "inpMovieDS",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AzureSqlDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "loadIntoDB",
							"description": "write to table",
							"rejectedDataLinkedService": {
								"referenceName": "linkedService1",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "sort1"
						},
						{
							"name": "filternullvotes"
						}
					],
					"scriptLines": [
						"source(output(",
						"          index as string,",
						"          title as string,",
						"          original_language as string,",
						"          release_date as string,",
						"          popularity as string,",
						"          vote_average as double,",
						"          vote_count as integer,",
						"          overview as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['Movies_dataset.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          index,",
						"          title,",
						"          original_language,",
						"          release_date,",
						"          popularity,",
						"          vote_average,",
						"          vote_count",
						"     ),",
						"     partitionBy('hash', 1),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sort(desc(vote_count, true),",
						"     partitionBy('hash', 1)) ~> sort1",
						"sort1 filter(not(isNull(vote_count)),",
						"     partitionBy('hash', 1)) ~> filternullvotes",
						"filternullvotes sink(allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     input(",
						"          indexkey as integer,",
						"          title as string,",
						"          original_language as string,",
						"          release_date as string,",
						"          popularity as string,",
						"          vote_avg as double,",
						"          vote_count as integer",
						"     ),",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'movie_data',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          indexkey = index,",
						"          title,",
						"          original_language,",
						"          release_date,",
						"          popularity,",
						"          vote_avg = vote_average,",
						"          vote_count",
						"     ),",
						"     partitionBy('hash', 1)) ~> loadIntoDB"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/inpMovieDS')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfcdc1')]",
			"type": "Microsoft.DataFactory/factories/adfcdcs",
			"apiVersion": "2018-06-01",
			"properties": {
				"SourceConnectionsInfo": [
					{
						"SourceEntities": [
							{
								"name": "dbo.movie_data",
								"properties": {
									"schema": [
										{
											"name": "indexkey",
											"dataType": "integer"
										},
										{
											"name": "title",
											"dataType": "string"
										},
										{
											"name": "original_language",
											"dataType": "string"
										},
										{
											"name": "release_date",
											"dataType": "string"
										},
										{
											"name": "popularity",
											"dataType": "string"
										},
										{
											"name": "vote_avg",
											"dataType": "double"
										},
										{
											"name": "vote_count",
											"dataType": "integer"
										}
									],
									"dslConnectorProperties": [
										{
											"name": "schemaName",
											"value": "dbo"
										},
										{
											"name": "tableName",
											"value": "movie_data"
										},
										{
											"name": "enableNativeCdc",
											"value": true
										},
										{
											"name": "netChanges",
											"value": true
										},
										{
											"name": "allowSchemaDrift",
											"value": false
										},
										{
											"name": "inferDriftedColumnTypes",
											"value": false
										}
									]
								}
							}
						],
						"Connection": {
							"linkedService": {
								"referenceName": "AzureSqlDatabase",
								"type": "LinkedServiceReference"
							},
							"linkedServiceType": "AzureSqlDatabase",
							"type": "linkedservicetype",
							"isInlineDataset": true,
							"commonDslConnectorProperties": [
								{
									"name": "allowSchemaDrift",
									"value": true
								},
								{
									"name": "inferDriftedColumnTypes",
									"value": true
								},
								{
									"name": "format",
									"value": "table"
								},
								{
									"name": "store",
									"value": "sqlserver"
								},
								{
									"name": "databaseType",
									"value": "databaseType"
								},
								{
									"name": "database",
									"value": "database"
								},
								{
									"name": "skipInitialLoad",
									"value": true
								}
							]
						}
					}
				],
				"TargetConnectionsInfo": [
					{
						"TargetEntities": [
							{
								"name": "dbo.movie_data",
								"properties": {
									"schema": [
										{
											"name": "indexkey",
											"dataType": "integer"
										},
										{
											"name": "title",
											"dataType": "string"
										},
										{
											"name": "original_language",
											"dataType": "string"
										},
										{
											"name": "release_date",
											"dataType": "string"
										},
										{
											"name": "popularity",
											"dataType": "string"
										},
										{
											"name": "vote_avg",
											"dataType": "double"
										},
										{
											"name": "vote_count",
											"dataType": "integer"
										}
									],
									"dslConnectorProperties": [
										{
											"name": "schemaName",
											"value": "dbo"
										},
										{
											"name": "tableName",
											"value": "movie_data"
										},
										{
											"name": "allowSchemaDrift",
											"value": false
										},
										{
											"name": "inferDriftedColumnTypes",
											"value": false
										},
										{
											"name": "keys",
											"value": [
												"indexkey"
											]
										},
										{
											"name": "deletable",
											"value": true
										},
										{
											"name": "updateable",
											"value": true
										},
										{
											"name": "upsertable",
											"value": true
										},
										{
											"name": "defaultToUpsert",
											"value": true
										}
									]
								}
							}
						],
						"Connection": {
							"linkedService": {
								"referenceName": "AzureSqlDatabase",
								"type": "LinkedServiceReference"
							},
							"linkedServiceType": "AzureSqlDatabase",
							"type": "linkedservicetype",
							"isInlineDataset": true,
							"commonDslConnectorProperties": [
								{
									"name": "allowSchemaDrift",
									"value": true
								},
								{
									"name": "inferDriftedColumnTypes",
									"value": true
								},
								{
									"name": "format",
									"value": "table"
								},
								{
									"name": "store",
									"value": "sqlserver"
								},
								{
									"name": "databaseType",
									"value": "databaseType"
								},
								{
									"name": "database",
									"value": "database"
								},
								{
									"name": "deletable",
									"value": false
								},
								{
									"name": "insertable",
									"value": true
								},
								{
									"name": "updateable",
									"value": false
								},
								{
									"name": "upsertable",
									"value": false
								},
								{
									"name": "skipDuplicateMapInputs",
									"value": true
								},
								{
									"name": "skipDuplicateMapOutputs",
									"value": true
								}
							]
						},
						"DataMapperMappings": [
							{
								"targetEntityName": "dbo.movie_data",
								"sourceEntityName": "dbo.movie_data",
								"sourceConnectionReference": {
									"connectionName": "AzureSqlDatabase",
									"type": "linkedservicetype"
								},
								"attributeMappingInfo": {
									"attributeMappings": [
										{
											"name": "indexkey",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "indexkey",
												"entity": "dbo.movie_data",
												"entityConnectionReference": {
													"connectionName": "AzureSqlDatabase",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "original_language",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "original_language",
												"entity": "dbo.movie_data",
												"entityConnectionReference": {
													"connectionName": "AzureSqlDatabase",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "popularity",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "popularity",
												"entity": "dbo.movie_data",
												"entityConnectionReference": {
													"connectionName": "AzureSqlDatabase",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "release_date",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "release_date",
												"entity": "dbo.movie_data",
												"entityConnectionReference": {
													"connectionName": "AzureSqlDatabase",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "title",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "title",
												"entity": "dbo.movie_data",
												"entityConnectionReference": {
													"connectionName": "AzureSqlDatabase",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "vote_avg",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "vote_avg",
												"entity": "dbo.movie_data",
												"entityConnectionReference": {
													"connectionName": "AzureSqlDatabase",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "vote_count",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "vote_count",
												"entity": "dbo.movie_data",
												"entityConnectionReference": {
													"connectionName": "AzureSqlDatabase",
													"type": "linkedservicetype"
												}
											}
										}
									]
								}
							}
						],
						"Relationships": []
					}
				],
				"Policy": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1
					},
					"mode": "Microbatch"
				},
				"status": "Stopped",
				"allowVNetOverride": false
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		}
	]
}